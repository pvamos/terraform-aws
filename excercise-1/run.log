
p@l440:~/terraform-aws/excercise-1$ terraform init

Initializing the backend...
Initializing modules...

Initializing provider plugins...
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.45.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
p@l440:~/terraform-aws/excercise-1$ terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.network.module.internet_gateway.aws_internet_gateway.gw will be created
  + resource "aws_internet_gateway" "gw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "example-igw"
        }
      + tags_all = {
          + "Name" = "example-igw"
        }
      + vpc_id   = (known after apply)
    }

  # module.network.module.nat_gateway.aws_eip.nat will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = true
    }

  # module.network.module.nat_gateway.aws_nat_gateway.nat will be created
  + resource "aws_nat_gateway" "nat" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table.private will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table.public will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.network.module.subnets.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.10.12.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "example-private-0"
        }
      + tags_all                                       = {
          + "Name" = "example-private-0"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.subnets.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.10.13.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "example-private-1"
        }
      + tags_all                                       = {
          + "Name" = "example-private-1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.subnets.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.10.10.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "example-public-0"
        }
      + tags_all                                       = {
          + "Name" = "example-public-0"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.subnets.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.10.11.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "example-public-1"
        }
      + tags_all                                       = {
          + "Name" = "example-public-1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.vpc.aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.10.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "example-vpc"
        }
      + tags_all                             = {
          + "Name" = "example-vpc"
        }
    }

  # module.network.module.vpc_endpoint.aws_vpc_endpoint.s3 will be created
  + resource "aws_vpc_endpoint" "s3" {
      + arn                   = (known after apply)
      + cidr_blocks           = (known after apply)
      + dns_entry             = (known after apply)
      + id                    = (known after apply)
      + ip_address_type       = (known after apply)
      + network_interface_ids = (known after apply)
      + owner_id              = (known after apply)
      + policy                = (known after apply)
      + prefix_list_id        = (known after apply)
      + private_dns_enabled   = false
      + requester_managed     = (known after apply)
      + route_table_ids       = (known after apply)
      + security_group_ids    = (known after apply)
      + service_name          = "com.amazonaws.us-east-1.s3"
      + state                 = (known after apply)
      + subnet_ids            = (known after apply)
      + tags_all              = (known after apply)
      + vpc_endpoint_type     = "Gateway"
      + vpc_id                = (known after apply)
    }

Plan: 15 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│
│   with module.network.module.nat_gateway.aws_eip.nat,
│   on modules/nat_gateway/main.tf line 2, in resource "aws_eip" "nat":
│    2:   vpc = true
│
│ use domain attribute instead
│
│ (and one more similar warning elsewhere)
╵

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.
p@l440:~/terraform-aws/excercise-1$ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.network.module.internet_gateway.aws_internet_gateway.gw will be created
  + resource "aws_internet_gateway" "gw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "example-igw"
        }
      + tags_all = {
          + "Name" = "example-igw"
        }
      + vpc_id   = (known after apply)
    }

  # module.network.module.nat_gateway.aws_eip.nat will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = true
    }

  # module.network.module.nat_gateway.aws_nat_gateway.nat will be created
  + resource "aws_nat_gateway" "nat" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags_all                           = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table.private will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + nat_gateway_id             = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table.public will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.network.module.route_tables.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.network.module.subnets.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.10.12.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "example-private-0"
        }
      + tags_all                                       = {
          + "Name" = "example-private-0"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.subnets.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.10.13.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "example-private-1"
        }
      + tags_all                                       = {
          + "Name" = "example-private-1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.subnets.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.10.10.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "example-public-0"
        }
      + tags_all                                       = {
          + "Name" = "example-public-0"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.subnets.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.10.11.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "example-public-1"
        }
      + tags_all                                       = {
          + "Name" = "example-public-1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.network.module.vpc.aws_vpc.main will be created
  + resource "aws_vpc" "main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.10.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "example-vpc"
        }
      + tags_all                             = {
          + "Name" = "example-vpc"
        }
    }

  # module.network.module.vpc_endpoint.aws_vpc_endpoint.s3 will be created
  + resource "aws_vpc_endpoint" "s3" {
      + arn                   = (known after apply)
      + cidr_blocks           = (known after apply)
      + dns_entry             = (known after apply)
      + id                    = (known after apply)
      + ip_address_type       = (known after apply)
      + network_interface_ids = (known after apply)
      + owner_id              = (known after apply)
      + policy                = (known after apply)
      + prefix_list_id        = (known after apply)
      + private_dns_enabled   = false
      + requester_managed     = (known after apply)
      + route_table_ids       = (known after apply)
      + security_group_ids    = (known after apply)
      + service_name          = "com.amazonaws.us-east-1.s3"
      + state                 = (known after apply)
      + subnet_ids            = (known after apply)
      + tags_all              = (known after apply)
      + vpc_endpoint_type     = "Gateway"
      + vpc_id                = (known after apply)
    }

Plan: 15 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│
│   with module.network.module.nat_gateway.aws_eip.nat,
│   on modules/nat_gateway/main.tf line 2, in resource "aws_eip" "nat":
│    2:   vpc = true
│
│ use domain attribute instead
│
│ (and one more similar warning elsewhere)
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.network.module.nat_gateway.aws_eip.nat: Creating...
module.network.module.vpc.aws_vpc.main: Creating...
module.network.module.nat_gateway.aws_eip.nat: Creation complete after 1s [id=eipalloc-09e04c4ff3c4bbb56]
module.network.module.vpc.aws_vpc.main: Still creating... [10s elapsed]
module.network.module.vpc.aws_vpc.main: Creation complete after 13s [id=vpc-092aec105bb519182]
module.network.module.internet_gateway.aws_internet_gateway.gw: Creating...
module.network.module.subnets.aws_subnet.private[0]: Creating...
module.network.module.subnets.aws_subnet.private[1]: Creating...
module.network.module.subnets.aws_subnet.public[1]: Creating...
module.network.module.subnets.aws_subnet.public[0]: Creating...
module.network.module.internet_gateway.aws_internet_gateway.gw: Creation complete after 1s [id=igw-0a07f6f95761d13fe]
module.network.module.route_tables.aws_route_table.public: Creating...
module.network.module.subnets.aws_subnet.private[0]: Creation complete after 1s [id=subnet-09a64346859d45141]
module.network.module.subnets.aws_subnet.private[1]: Creation complete after 1s [id=subnet-07fc2275871ad6047]
module.network.module.route_tables.aws_route_table.public: Creation complete after 1s [id=rtb-0f23812667f3bd5e2]
module.network.module.subnets.aws_subnet.public[1]: Still creating... [10s elapsed]
module.network.module.subnets.aws_subnet.public[0]: Still creating... [10s elapsed]
module.network.module.subnets.aws_subnet.public[1]: Creation complete after 11s [id=subnet-08a7b6aae08953dbb]
module.network.module.subnets.aws_subnet.public[0]: Creation complete after 11s [id=subnet-0677d2c42fea6169c]
module.network.module.route_tables.aws_route_table_association.public[0]: Creating...
module.network.module.route_tables.aws_route_table_association.public[1]: Creating...
module.network.module.nat_gateway.aws_nat_gateway.nat: Creating...
module.network.module.route_tables.aws_route_table_association.public[1]: Creation complete after 0s [id=rtbassoc-0b114245494a90d86]
module.network.module.route_tables.aws_route_table_association.public[0]: Creation complete after 0s [id=rtbassoc-025f3b8ea86ce4d30]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [10s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [20s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [30s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [40s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [50s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [1m0s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [1m10s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [1m20s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [1m30s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still creating... [1m40s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Creation complete after 1m45s [id=nat-09a7cf438f6f50800]
module.network.module.route_tables.aws_route_table.private: Creating...
module.network.module.route_tables.aws_route_table.private: Creation complete after 2s [id=rtb-0b3f53e55e0f2b5d5]
module.network.module.route_tables.aws_route_table_association.private[1]: Creating...
module.network.module.route_tables.aws_route_table_association.private[0]: Creating...
module.network.module.vpc_endpoint.aws_vpc_endpoint.s3: Creating...
module.network.module.route_tables.aws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-00e57e8bb052132aa]
module.network.module.route_tables.aws_route_table_association.private[1]: Creation complete after 1s [id=rtbassoc-01658a4f38bf09ea6]
module.network.module.vpc_endpoint.aws_vpc_endpoint.s3: Creation complete after 7s [id=vpce-092b6588ee6266856]
╷
│ Warning: Argument is deprecated
│
│   with module.network.module.nat_gateway.aws_eip.nat,
│   on modules/nat_gateway/main.tf line 2, in resource "aws_eip" "nat":
│    2:   vpc = true
│
│ use domain attribute instead
╵

Apply complete! Resources: 15 added, 0 changed, 0 destroyed.
p@l440:~/terraform-aws/excercise-1$ terraform destroy
module.network.module.nat_gateway.aws_eip.nat: Refreshing state... [id=eipalloc-09e04c4ff3c4bbb56]
module.network.module.vpc.aws_vpc.main: Refreshing state... [id=vpc-092aec105bb519182]
module.network.module.internet_gateway.aws_internet_gateway.gw: Refreshing state... [id=igw-0a07f6f95761d13fe]
module.network.module.subnets.aws_subnet.public[1]: Refreshing state... [id=subnet-08a7b6aae08953dbb]
module.network.module.subnets.aws_subnet.public[0]: Refreshing state... [id=subnet-0677d2c42fea6169c]
module.network.module.subnets.aws_subnet.private[1]: Refreshing state... [id=subnet-07fc2275871ad6047]
module.network.module.subnets.aws_subnet.private[0]: Refreshing state... [id=subnet-09a64346859d45141]
module.network.module.route_tables.aws_route_table.public: Refreshing state... [id=rtb-0f23812667f3bd5e2]
module.network.module.route_tables.aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-025f3b8ea86ce4d30]
module.network.module.route_tables.aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-0b114245494a90d86]
module.network.module.nat_gateway.aws_nat_gateway.nat: Refreshing state... [id=nat-09a7cf438f6f50800]
module.network.module.route_tables.aws_route_table.private: Refreshing state... [id=rtb-0b3f53e55e0f2b5d5]
module.network.module.route_tables.aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-01658a4f38bf09ea6]
module.network.module.route_tables.aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-00e57e8bb052132aa]
module.network.module.vpc_endpoint.aws_vpc_endpoint.s3: Refreshing state... [id=vpce-092b6588ee6266856]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # module.network.module.internet_gateway.aws_internet_gateway.gw will be destroyed
  - resource "aws_internet_gateway" "gw" {
      - arn      = "arn:aws:ec2:us-east-1:767397961434:internet-gateway/igw-0a07f6f95761d13fe" -> null
      - id       = "igw-0a07f6f95761d13fe" -> null
      - owner_id = "767397961434" -> null
      - tags     = {
          - "Name" = "example-igw"
        } -> null
      - tags_all = {
          - "Name" = "example-igw"
        } -> null
      - vpc_id   = "vpc-092aec105bb519182" -> null
    }

  # module.network.module.nat_gateway.aws_eip.nat will be destroyed
  - resource "aws_eip" "nat" {
      - allocation_id            = "eipalloc-09e04c4ff3c4bbb56" -> null
      - association_id           = "eipassoc-0ccc8fe125fd69e83" -> null
      - domain                   = "vpc" -> null
      - id                       = "eipalloc-09e04c4ff3c4bbb56" -> null
      - network_border_group     = "us-east-1" -> null
      - network_interface        = "eni-0ba2df1061fc45a6f" -> null
      - private_dns              = "ip-10-10-10-210.ec2.internal" -> null
      - private_ip               = "10.10.10.210" -> null
      - public_dns               = "ec2-44-223-252-156.compute-1.amazonaws.com" -> null
      - public_ip                = "44.223.252.156" -> null
      - public_ipv4_pool         = "amazon" -> null
      - tags                     = {} -> null
      - tags_all                 = {} -> null
      - vpc                      = true -> null
        # (4 unchanged attributes hidden)
    }

  # module.network.module.nat_gateway.aws_nat_gateway.nat will be destroyed
  - resource "aws_nat_gateway" "nat" {
      - allocation_id                      = "eipalloc-09e04c4ff3c4bbb56" -> null
      - association_id                     = "eipassoc-0ccc8fe125fd69e83" -> null
      - connectivity_type                  = "public" -> null
      - id                                 = "nat-09a7cf438f6f50800" -> null
      - network_interface_id               = "eni-0ba2df1061fc45a6f" -> null
      - private_ip                         = "10.10.10.210" -> null
      - public_ip                          = "44.223.252.156" -> null
      - secondary_allocation_ids           = [] -> null
      - secondary_private_ip_address_count = 0 -> null
      - secondary_private_ip_addresses     = [] -> null
      - subnet_id                          = "subnet-0677d2c42fea6169c" -> null
      - tags                               = {} -> null
      - tags_all                           = {} -> null
    }

  # module.network.module.route_tables.aws_route_table.private will be destroyed
  - resource "aws_route_table" "private" {
      - arn              = "arn:aws:ec2:us-east-1:767397961434:route-table/rtb-0b3f53e55e0f2b5d5" -> null
      - id               = "rtb-0b3f53e55e0f2b5d5" -> null
      - owner_id         = "767397961434" -> null
      - propagating_vgws = [] -> null
      - route            = [
          - {
              - cidr_block                 = "0.0.0.0/0"
              - nat_gateway_id             = "nat-09a7cf438f6f50800"
                # (11 unchanged attributes hidden)
            },
        ] -> null
      - tags             = {} -> null
      - tags_all         = {} -> null
      - vpc_id           = "vpc-092aec105bb519182" -> null
    }

  # module.network.module.route_tables.aws_route_table.public will be destroyed
  - resource "aws_route_table" "public" {
      - arn              = "arn:aws:ec2:us-east-1:767397961434:route-table/rtb-0f23812667f3bd5e2" -> null
      - id               = "rtb-0f23812667f3bd5e2" -> null
      - owner_id         = "767397961434" -> null
      - propagating_vgws = [] -> null
      - route            = [
          - {
              - cidr_block                 = "0.0.0.0/0"
              - gateway_id                 = "igw-0a07f6f95761d13fe"
                # (11 unchanged attributes hidden)
            },
        ] -> null
      - tags             = {} -> null
      - tags_all         = {} -> null
      - vpc_id           = "vpc-092aec105bb519182" -> null
    }

  # module.network.module.route_tables.aws_route_table_association.private[0] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-00e57e8bb052132aa" -> null
      - route_table_id = "rtb-0b3f53e55e0f2b5d5" -> null
      - subnet_id      = "subnet-09a64346859d45141" -> null
        # (1 unchanged attribute hidden)
    }

  # module.network.module.route_tables.aws_route_table_association.private[1] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-01658a4f38bf09ea6" -> null
      - route_table_id = "rtb-0b3f53e55e0f2b5d5" -> null
      - subnet_id      = "subnet-07fc2275871ad6047" -> null
        # (1 unchanged attribute hidden)
    }

  # module.network.module.route_tables.aws_route_table_association.public[0] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-025f3b8ea86ce4d30" -> null
      - route_table_id = "rtb-0f23812667f3bd5e2" -> null
      - subnet_id      = "subnet-0677d2c42fea6169c" -> null
        # (1 unchanged attribute hidden)
    }

  # module.network.module.route_tables.aws_route_table_association.public[1] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-0b114245494a90d86" -> null
      - route_table_id = "rtb-0f23812667f3bd5e2" -> null
      - subnet_id      = "subnet-08a7b6aae08953dbb" -> null
        # (1 unchanged attribute hidden)
    }

  # module.network.module.subnets.aws_subnet.private[0] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-east-1:767397961434:subnet/subnet-09a64346859d45141" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-1a" -> null
      - availability_zone_id                           = "use1-az6" -> null
      - cidr_block                                     = "10.10.12.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-09a64346859d45141" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "767397961434" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "example-private-0"
        } -> null
      - tags_all                                       = {
          - "Name" = "example-private-0"
        } -> null
      - vpc_id                                         = "vpc-092aec105bb519182" -> null
        # (4 unchanged attributes hidden)
    }

  # module.network.module.subnets.aws_subnet.private[1] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-east-1:767397961434:subnet/subnet-07fc2275871ad6047" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-1b" -> null
      - availability_zone_id                           = "use1-az1" -> null
      - cidr_block                                     = "10.10.13.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-07fc2275871ad6047" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "767397961434" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "example-private-1"
        } -> null
      - tags_all                                       = {
          - "Name" = "example-private-1"
        } -> null
      - vpc_id                                         = "vpc-092aec105bb519182" -> null
        # (4 unchanged attributes hidden)
    }

  # module.network.module.subnets.aws_subnet.public[0] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-east-1:767397961434:subnet/subnet-0677d2c42fea6169c" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-1a" -> null
      - availability_zone_id                           = "use1-az6" -> null
      - cidr_block                                     = "10.10.10.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0677d2c42fea6169c" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = true -> null
      - owner_id                                       = "767397961434" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "example-public-0"
        } -> null
      - tags_all                                       = {
          - "Name" = "example-public-0"
        } -> null
      - vpc_id                                         = "vpc-092aec105bb519182" -> null
        # (4 unchanged attributes hidden)
    }

  # module.network.module.subnets.aws_subnet.public[1] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-east-1:767397961434:subnet/subnet-08a7b6aae08953dbb" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-1b" -> null
      - availability_zone_id                           = "use1-az1" -> null
      - cidr_block                                     = "10.10.11.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-08a7b6aae08953dbb" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = true -> null
      - owner_id                                       = "767397961434" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name" = "example-public-1"
        } -> null
      - tags_all                                       = {
          - "Name" = "example-public-1"
        } -> null
      - vpc_id                                         = "vpc-092aec105bb519182" -> null
        # (4 unchanged attributes hidden)
    }

  # module.network.module.vpc.aws_vpc.main will be destroyed
  - resource "aws_vpc" "main" {
      - arn                                  = "arn:aws:ec2:us-east-1:767397961434:vpc/vpc-092aec105bb519182" -> null
      - assign_generated_ipv6_cidr_block     = false -> null
      - cidr_block                           = "10.10.0.0/16" -> null
      - default_network_acl_id               = "acl-0d4032416f137342a" -> null
      - default_route_table_id               = "rtb-08605f54b4749ff78" -> null
      - default_security_group_id            = "sg-0ed8be3d93cb29509" -> null
      - dhcp_options_id                      = "dopt-097221ed8fdf1b4f4" -> null
      - enable_dns_hostnames                 = true -> null
      - enable_dns_support                   = true -> null
      - enable_network_address_usage_metrics = false -> null
      - id                                   = "vpc-092aec105bb519182" -> null
      - instance_tenancy                     = "default" -> null
      - ipv6_netmask_length                  = 0 -> null
      - main_route_table_id                  = "rtb-08605f54b4749ff78" -> null
      - owner_id                             = "767397961434" -> null
      - tags                                 = {
          - "Name" = "example-vpc"
        } -> null
      - tags_all                             = {
          - "Name" = "example-vpc"
        } -> null
        # (4 unchanged attributes hidden)
    }

  # module.network.module.vpc_endpoint.aws_vpc_endpoint.s3 will be destroyed
  - resource "aws_vpc_endpoint" "s3" {
      - arn                   = "arn:aws:ec2:us-east-1:767397961434:vpc-endpoint/vpce-092b6588ee6266856" -> null
      - cidr_blocks           = [
          - "16.182.0.0/16",
          - "18.34.0.0/19",
          - "52.216.0.0/15",
          - "54.231.0.0/16",
          - "3.5.0.0/19",
          - "18.34.232.0/21",
        ] -> null
      - dns_entry             = [] -> null
      - id                    = "vpce-092b6588ee6266856" -> null
      - network_interface_ids = [] -> null
      - owner_id              = "767397961434" -> null
      - policy                = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "*"
                      - Effect    = "Allow"
                      - Principal = "*"
                      - Resource  = "*"
                    },
                ]
              - Version   = "2008-10-17"
            }
        ) -> null
      - prefix_list_id        = "pl-63a5400a" -> null
      - private_dns_enabled   = false -> null
      - requester_managed     = false -> null
      - route_table_ids       = [
          - "rtb-0b3f53e55e0f2b5d5",
        ] -> null
      - security_group_ids    = [] -> null
      - service_name          = "com.amazonaws.us-east-1.s3" -> null
      - state                 = "available" -> null
      - subnet_ids            = [] -> null
      - tags                  = {} -> null
      - tags_all              = {} -> null
      - vpc_endpoint_type     = "Gateway" -> null
      - vpc_id                = "vpc-092aec105bb519182" -> null
        # (1 unchanged attribute hidden)
    }

Plan: 0 to add, 0 to change, 15 to destroy.
╷
│ Warning: Argument is deprecated
│
│   with module.network.module.nat_gateway.aws_eip.nat,
│   on modules/nat_gateway/main.tf line 2, in resource "aws_eip" "nat":
│    2:   vpc = true
│
│ use domain attribute instead
╵

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

module.network.module.route_tables.aws_route_table_association.private[1]: Destroying... [id=rtbassoc-01658a4f38bf09ea6]
module.network.module.route_tables.aws_route_table_association.public[1]: Destroying... [id=rtbassoc-0b114245494a90d86]
module.network.module.route_tables.aws_route_table_association.private[0]: Destroying... [id=rtbassoc-00e57e8bb052132aa]
module.network.module.route_tables.aws_route_table_association.public[0]: Destroying... [id=rtbassoc-025f3b8ea86ce4d30]
module.network.module.vpc_endpoint.aws_vpc_endpoint.s3: Destroying... [id=vpce-092b6588ee6266856]
module.network.module.route_tables.aws_route_table_association.public[1]: Destruction complete after 0s
module.network.module.route_tables.aws_route_table_association.private[0]: Destruction complete after 0s
module.network.module.route_tables.aws_route_table_association.public[0]: Destruction complete after 0s
module.network.module.route_tables.aws_route_table_association.private[1]: Destruction complete after 0s
module.network.module.route_tables.aws_route_table.public: Destroying... [id=rtb-0f23812667f3bd5e2]
module.network.module.subnets.aws_subnet.private[1]: Destroying... [id=subnet-07fc2275871ad6047]
module.network.module.subnets.aws_subnet.private[0]: Destroying... [id=subnet-09a64346859d45141]
module.network.module.subnets.aws_subnet.private[0]: Destruction complete after 0s
module.network.module.subnets.aws_subnet.private[1]: Destruction complete after 0s
module.network.module.route_tables.aws_route_table.public: Destruction complete after 0s
module.network.module.internet_gateway.aws_internet_gateway.gw: Destroying... [id=igw-0a07f6f95761d13fe]
module.network.module.vpc_endpoint.aws_vpc_endpoint.s3: Destruction complete after 6s
module.network.module.route_tables.aws_route_table.private: Destroying... [id=rtb-0b3f53e55e0f2b5d5]
module.network.module.route_tables.aws_route_table.private: Destruction complete after 1s
module.network.module.nat_gateway.aws_nat_gateway.nat: Destroying... [id=nat-09a7cf438f6f50800]
module.network.module.internet_gateway.aws_internet_gateway.gw: Still destroying... [id=igw-0a07f6f95761d13fe, 10s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still destroying... [id=nat-09a7cf438f6f50800, 10s elapsed]
module.network.module.internet_gateway.aws_internet_gateway.gw: Still destroying... [id=igw-0a07f6f95761d13fe, 20s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still destroying... [id=nat-09a7cf438f6f50800, 20s elapsed]
module.network.module.internet_gateway.aws_internet_gateway.gw: Still destroying... [id=igw-0a07f6f95761d13fe, 30s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still destroying... [id=nat-09a7cf438f6f50800, 30s elapsed]
module.network.module.internet_gateway.aws_internet_gateway.gw: Still destroying... [id=igw-0a07f6f95761d13fe, 40s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still destroying... [id=nat-09a7cf438f6f50800, 40s elapsed]
module.network.module.internet_gateway.aws_internet_gateway.gw: Still destroying... [id=igw-0a07f6f95761d13fe, 50s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still destroying... [id=nat-09a7cf438f6f50800, 50s elapsed]
module.network.module.internet_gateway.aws_internet_gateway.gw: Still destroying... [id=igw-0a07f6f95761d13fe, 1m0s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Still destroying... [id=nat-09a7cf438f6f50800, 1m0s elapsed]
module.network.module.nat_gateway.aws_nat_gateway.nat: Destruction complete after 1m3s
module.network.module.subnets.aws_subnet.public[0]: Destroying... [id=subnet-0677d2c42fea6169c]
module.network.module.nat_gateway.aws_eip.nat: Destroying... [id=eipalloc-09e04c4ff3c4bbb56]
module.network.module.subnets.aws_subnet.public[1]: Destroying... [id=subnet-08a7b6aae08953dbb]
module.network.module.subnets.aws_subnet.public[1]: Destruction complete after 1s
module.network.module.subnets.aws_subnet.public[0]: Destruction complete after 1s
module.network.module.internet_gateway.aws_internet_gateway.gw: Still destroying... [id=igw-0a07f6f95761d13fe, 1m10s elapsed]
module.network.module.nat_gateway.aws_eip.nat: Destruction complete after 2s
module.network.module.internet_gateway.aws_internet_gateway.gw: Destruction complete after 1m11s
module.network.module.vpc.aws_vpc.main: Destroying... [id=vpc-092aec105bb519182]
module.network.module.vpc.aws_vpc.main: Destruction complete after 1s

Destroy complete! Resources: 15 destroyed.
p@l440:~/terraform-aws/excercise-1$
